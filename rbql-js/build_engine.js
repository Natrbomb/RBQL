#!/usr/bin/env node
const os = require('os');
const path = require('path');
const fs = require('fs');

const rbql_home_dir = __dirname;


function replace_all(src, search, replacement) {
    return src.split(search).join(replacement);
}


function escape_string_literal(src) {
    src = replace_all(src, '\\', '\\\\');
    src = replace_all(src, "'", "\\'");
    src = replace_all(src, "\n", "\\n");
    src = "'" + src + "'";
    return src;
}

function escape_string_literal_backtick(src) {
    src = replace_all(src, '\\', '\\\\');
    src = replace_all(src, "`", "\\`");
    src = replace_all(src, "${", "\\${");
    src = "`" + src + "`";
    return src;
}


function build_engine() {
    let proto_engine_dir = path.join(rbql_home_dir, 'proto_engine');
    let builder_text = fs.readFileSync(path.join(proto_engine_dir, 'builder.js'), 'utf-8');
    let template_text = fs.readFileSync(path.join(proto_engine_dir, 'template.js'), 'utf-8');
    let marker = 'codegeneration_pseudo_function_include_combine("template.js")';
    let do_not_edit_warning = '// Do not edit!\n// This file was autogenerated from builder.js and template.js\n';
    //let engine_text = do_not_edit_warning + builder_text.replace(marker, escape_string_literal(template_text)) + do_not_edit_warning;
    let engine_text = do_not_edit_warning + builder_text.replace(marker, escape_string_literal_backtick(template_text)) + do_not_edit_warning;
    fs.writeFileSync(path.join(rbql_home_dir, 'engine.js'), engine_text, 'utf-8');
}


module.exports.build_engine = build_engine;

if (require.main === module) {
    build_engine();
}


